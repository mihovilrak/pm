services:
  db:
    build: ./db
    container_name: pm_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: ${TZ}
      SHARED_BUFF: ${SHARED_BUFF}
      WORK_MEM: ${WORK_MEM}
      MAINTENANCE_WORK_MEM: ${MAINTENANCE_WORK_MEM}
      EFF_CACHE_SIZE: ${EFF_CACHE_SIZE}

    volumes:
      - ./db/db_data:/var/lib/postgresql/data
      - ./db/backup:/backups
    ports:
      - "5432:5432"
    restart: always

  backend:
    build: ./api
    container_name: pm_api
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      SESSION_SECRET: ${SESSION_SECRET}
      NODE_ENV: ${NODE_ENV}
    depends_on:
      - db
    ports:
      - "5000:5000"
    restart: always

  frontend:
    build: ./fe
    container_name: pm_fe
    depends_on:
      - backend
    ports:
      - "3000:80"
    restart: always

  notification-service:
    build:
      context: ./be/notification-service
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgres
      - DB_NAME=${DB_NAME}
      - DB_PORT=5432
      - EMAIL_ENABLED=true
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_SECURE=${EMAIL_SECURE}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM}
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network